1. Launching the browser => Create an object of WebDriver interface
2. get() => Launch the url
3. getTitle() => Return the title of page (String)
4. getCurrentUrl() => Return url of the page (String)
5. getPageSource() => Returns the rendered html of page (String)
6. close() => Close the browser which is opened by WebDriver object. 
7. findElement() => Reads/Finds the control / WebElement on the page. Locates for 1st occurance (WebElement)
8. findElements() => Read multiple controls on the web page. (List<WebElement>)


=============================
Locator
=============================
Are the way to read any control / WebElement on the page

1. Name
2. Id
3. ClassName
4. CssSelector
5. Xpath
6. LinkText
7. PartialLinkText
8. TagName

RelativeLocator




=====================================
WebElement interface
=====================================
It is an interface that refers to any control on the pag

Method
1. sendKeys() => Enter some text in the textbox. Will append the text.
2. click() => Will click on the control
3. getText() => Return the text on the control. (String)
4. submit() => Submits the form (Clicks on the button if the button is having type = "submit" attribute)
5. isSelected() => Check whether the control (Checkbox / Radio button) is selected or not. (boolean)
6. isEnabled() => Checks that whether the control is enabled or disabled. (boolean)
7. isDisplayed() => Checks that whether the control is visible or not (boolean)




===================================
CssSelector
===================================
With the help of this locator, you can locate any control using any one of the attribute of control.

1. Single Attribute
	tagName[attribute = "value"]
	input[placeholder="Email address or phone number"]

2. Multiple Attribute
	tagName[attribute1 = "value"][attribute2 = "value"]


3. Special Characters
	a. ^ - Starts With
	b. $ - Ends With
	c. * - Contains


====================================
XPath
====================================
XPath -> XML Path

Ichalkaranji Bus Stand -> Shahu Putala -> 3 Batti (4 Rasta) Chouk -> Chandur Road -> Sarvesh's Home 

1. Absolute XPath
	Starts with html

2. Relative XPath


=================================
Handling Dropdownlist
=================================
If the control is having <select> tag, then only we are considiring it as dropdownlist

Select class is used to handle such a dropdown list

1. Display selected country
2. Display total no of countries
3. Display list of all the countries
4. Select USA
5. Display selected country

Method
1. getFirstSelectedOption() => Returns the selected item/element (WebElement)
2. getOptions() => Returns list of all the elements from the dropdown list (List<WebElement>)
3. selectByVisibleText() =>
4. selectByValue() =>
5. selectByIndex() => 

==============================
Synchronization
==============================
Process of adjusting speed of tool with speed of application

1. Thread.Sleep()
	a. Applicable to Single statement only
	b. Takes mandatory delay
2. ImplicitWait
	a. Applicable throughout a script
	b. It dosent take mandatory delay
3. ExplicitWait (WebDriverWait class)
	a. Applicable to Single statement only
	b. It dosent take mandatory delay
4. FluentWait
	a. Applicable to Single statement only
	b. It dosent take mandatory delay
	c. It can manage the exception

	w withTimeout
	i ignoring
	p pollingEvery
	u until
5. PageLoadTimeout

================================
Handling Table
================================
1. Display all table headers
2. Display total no of rows
3. Display any row randomly


================================
Handling Javascript Alerts
================================
Alert interface is used to handle alerts

Methods
1. driver.switchTo().alert() --> Take you on the alert
2. getText() --> Return the text on the alert
3. accept() --> Will click on Ok button
4. dismiss() --> Will click on Cancel button
5. sendKeys() --> Will enter the text on Prompt box (Alert)
 

================================
Mouse Actions
================================

Actrions Class is used to handle mouse actions such as

1. Left Click (Click)
2. Right click
3. Hover			(moveToElement())
4. Drag and Drop
5. Double Click			(doubleClick())

================================
TestNG
================================
Open source test automation framework

Framework --> Set of rules, guidelines for automation.

Inspired with JUnit & NUnit

NG --> Next Generation

Advantages

1. Annotations
	@Test, @BeforeTest, @AfterTest, @BeforeMethod, @AfterMethod, @DataPrivider, @Parameters, 
2. Set the priorities for the test case
3. Execute / Skip single test case / multiple test cases
4. Data driven testing
5. Automated reports
	a. Normal report
	b. HTML Report
6. Create and execute group of test case.
7. Parameterization
8. 



































